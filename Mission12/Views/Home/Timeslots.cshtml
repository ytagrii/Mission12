@{
    ViewData["Title"] = "View Time Slots";
}
@model List<Appointment>

<h1 class="text-center">View Available Timeslots Below</h1>

<!--Make a tables with all the available timeslots below-->
<table class="table table-striped table-bordered">
    <thead>
        <tr>
            <td class="font-weight-bold">Date</td>
            <td class="font-weight-bold">Time Slot</td>
            <td></td>
        </tr>
    </thead>
    <tbody>
        @foreach (Appointment a in Model)
        {
            <tr>
                <td>@a.Date.ToLongDateString()</td>
                <td>@a.Date.ToString("hh:mm tt")</td>
                <td>
                    <a class="btn btn-primary btn-sm" asp-controller="Home" asp-action="SignupForm" asp-route-id="@a.BookingId">Reserve Now</a>
                    @*<form asp-controller="Home" asp-action="SignupForm" method="post">
                            <input asp-for="@a.BookingId" name="bookingId" type="hidden" value="@a.BookingId" />
                            <button type="submit" class="btn btn-primary btn-sm">Reserve Now</button>
                        </form>*@
                </td>
            </tr>
        }

    </tbody>
</table>
<thead>
    <tr>
        <td class="font-weight-bold">Date</td>
    </tr>
</thead>
@*@{ DateTime currentDay = DateTime.Today;
        DateTime endDay = currentDay.AddMonths(3);
        DateTime currentTime = currentDay;
        DateTime currentDayAdjusted = currentDay;
    }

    <select id="days" name="days">
        @do
        {
            currentDayAdjusted = currentDay.AddHours(8);
            currentTime = currentDayAdjusted;

            do
            {
                <option value="@currentTime">@currentTime.ToString("dddd | MMMM dd yyyy | h:mm tt")</option>
                currentTime = currentTime.AddHours(1);
            } while (currentTime <= currentDayAdjusted.AddHours(12));
            currentDay = currentDay.AddDays(1);

        } while (currentDay <= endDay);
    </select>*@




@{ DateTime currentDay = DateTime.Today;
    DateTime endDay = currentDay.AddMonths(3);
    DateTime currentTime = currentDay;
    DateTime currentDayAdjusted = currentDay;
}


@do
{
    <button class="accordion">@currentDay.ToLongDateString()</button>
    <div class="panel">


        @{currentDayAdjusted = currentDay.AddHours(8);
            currentTime = currentDayAdjusted;
        }
        <table>
            @do
            {
                @*<p>@currentTime.ToString("dddd | MMMM dd yyyy | h:mm tt")</p>*@
            <tr>
                <td>@currentTime.ToString("h:mm tt")</td>
                <td><a asp-controller="Home" asp-action="SignupForm" asp-route-id="@currentTime">@currentTime.ToString("h:mm tt")</a></td>
            </tr>
                currentTime = currentTime.AddHours(1);
            } while (currentTime <= currentDayAdjusted.AddHours(12));
        </table>
        @{currentDay = currentDay.AddDays(1);}
    </div>
} while (currentDay <= endDay);


@*<table>
        @do
        {
        <tr>
            <td>@currentDay.ToLongDateString()</td>
        </tr>
        currentDay = currentDay.AddDays(1);
        } while (currentDay <= endDay);


    </table>*@
<script>var acc = document.getElementsByClassName("accordion");
        var i;

        for (i = 0; i < acc.length; i++) {
            acc[i].addEventListener("click", function () {
                /* Toggle between adding and removing the "active" class,
                to highlight the button that controls the panel */
                this.classList.toggle("active");

                /* Toggle between hiding and showing the active panel */
                var panel = this.nextElementSibling;
                if (panel.style.display === "block") {
                    panel.style.display = "none";
                } else {
                    panel.style.display = "block";
                }
            });
        }</script>